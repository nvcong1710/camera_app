// Generated by view binder compiler. Do not edit!
package com.example.myapplication.shared.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.shared.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.navigation.NavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentMainBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-w1240dp/</li>
   *   <li>layout-w600dp/</li>
   * </ul>
   */
  @Nullable
  public final BottomNavigationView bottomNavView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-w1240dp/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   *   <li>layout-w600dp/</li>
   * </ul>
   */
  @Nullable
  public final FloatingActionButton fab;

  @NonNull
  public final FragmentContainerView navHostFragmentContentMain;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-w1240dp/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   *   <li>layout-w600dp/</li>
   * </ul>
   */
  @Nullable
  public final NavigationView navView;

  private ContentMainBinding(@NonNull View rootView, @Nullable BottomNavigationView bottomNavView,
      @Nullable FloatingActionButton fab, @NonNull FragmentContainerView navHostFragmentContentMain,
      @Nullable NavigationView navView) {
    this.rootView = rootView;
    this.bottomNavView = bottomNavView;
    this.fab = fab;
    this.navHostFragmentContentMain = navHostFragmentContentMain;
    this.navView = navView;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_nav_view;
      BottomNavigationView bottomNavView = ViewBindings.findChildViewById(rootView, id);

      id = R.id.fab;
      FloatingActionButton fab = ViewBindings.findChildViewById(rootView, id);

      id = R.id.nav_host_fragment_content_main;
      FragmentContainerView navHostFragmentContentMain = ViewBindings.findChildViewById(rootView, id);
      if (navHostFragmentContentMain == null) {
        break missingId;
      }

      id = R.id.nav_view;
      NavigationView navView = ViewBindings.findChildViewById(rootView, id);

      return new ContentMainBinding(rootView, bottomNavView, fab, navHostFragmentContentMain,
          navView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
